(()=>{"use strict";var __webpack_modules__={290:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$X:()=>addTaskFormOpenClose,ZJ:()=>addProjectBtn,pR:()=>addTaskBtn,wZ:()=>inboxController});var _project_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(15),_task_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(507),_localStorage_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(158);const addTaskFormOpenClose=function(e,t,o){const c=document.querySelector(e),a=document.querySelector(t),r=document.querySelector(o);c.addEventListener("click",(()=>{r.classList.add("active")})),a.addEventListener("click",(()=>{r.classList.remove("active")}))},closeForm=function(){document.querySelector(".customProjForm").classList.remove("active"),document.querySelector(".projectName").value=""},openForm=function(){document.querySelector(".customProjForm").classList.add("active")},getNewData=function(){return document.querySelectorAll("[data-project]").length},getNewDataTask=function(){return document.querySelectorAll("[data-task]").length},addProject=function(e){const t=getNewData(),o=document.querySelector(".customProjList"),c=document.querySelector("#projForm"),a=document.createElement("div"),r=document.createElement("button"),_=document.createElement("p");a.classList.add("customProj"),a.setAttribute("data-project",`${t}`),_.textContent=e;const s=new _project_js__WEBPACK_IMPORTED_MODULE_0__.Z(e);_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB.push(s),r.setAttribute("data-btn",`${t}`),r.textContent="X",a.appendChild(_),a.appendChild(r),_.addEventListener("click",(()=>{changeProject(a.getAttribute("data-project"))})),r.addEventListener("click",(()=>{a.remove();let e=document.querySelectorAll("[data-project]");_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB.splice(t,1);for(let t=0;t<e.length;t++)e[t].setAttribute("data-project",t)})),o.insertBefore(a,c)},addProjectBtn=function(){const e=document.querySelector(".customProjBtn"),t=document.querySelector("button.close"),o=document.querySelector("button.add");e.addEventListener("click",(()=>{openForm()})),t.addEventListener("click",(()=>{closeForm()})),o.addEventListener("click",(e=>{e.preventDefault();let t=document.querySelector(".projectName");addProject(t.value),closeForm()}))},addTask=function(){let e=_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB[_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.Vk],t=document.querySelector("#taskTitle").value,o=document.querySelector("#taskDesc").value,c=document.querySelector("#taskDate").value,a=document.querySelector("#taskPrior").value;""===c&&(c="No date");const r=new _task_js__WEBPACK_IMPORTED_MODULE_2__.Z(t,o,c,a),_=document.querySelector(".taskForm");e.list.push(r),_.classList.remove("active"),o="",c="",a="",showTask(r)},inboxController=function(){document.querySelector("#inbox").addEventListener("click",(()=>{changeProject(0)}))},addTaskBtn=function(){document.querySelector("#addTask").addEventListener("click",(()=>{addTask(),document.querySelector("#taskTitle").value="",document.querySelector("#taskDesc").value="",document.querySelector("#taskDate").value="",document.querySelector("#taskPrior").value="0"}))},changeProject=function(e){const t=document.querySelector("#projectName"),o=_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB[e].title;document.querySelector("section").innerHTML="",_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB[e].list.forEach((e=>{showTask(e)})),t.textContent=o,_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.Vk=e},renderTask=function(task){let index=getNewDataTask();const taskBox=document.createElement("div");taskBox.classList.add("task"),taskBox.setAttribute("data-task",`${index}`);const completedInput=document.createElement("input");completedInput.setAttribute("type","checkbox"),completedInput.addEventListener("change",(()=>{task.completed=!task.completed,console.log(task)}));const div1=document.createElement("div"),div2=document.createElement("div");div2.classList.add("titlenpri");const title=document.createElement("span");title.classList.add("title"),title.textContent=task.title;const prior=document.createElement("span");prior.classList.add("prior");const starImg0=document.createElement("img"),starImg1=document.createElement("img"),starImg2=document.createElement("img");starImg0.src="images/star-fill.svg",starImg1.src="images/star-fill.svg",starImg2.src="images/star-fill.svg";let i=0;do{eval(`prior.appendChild(starImg${i});`),i++}while(task.priority>=i);const desc=document.createElement("span");desc.classList.add("desc"),desc.textContent=task.desc;const date=document.createElement("span");date.classList.add("dueDate"),date.textContent=task.dueDate;const deleteBtn=document.createElement("button");return deleteBtn.textContent="Delete",deleteBtn.addEventListener("click",(()=>{taskBox.remove();const e=document.querySelectorAll("[data-task]");_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB[_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.Vk].list.splice(index,1);for(let t=0;t<e.length;t++)e[t].setAttribute("data-task",t);console.log(_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB)})),div2.appendChild(title),div2.appendChild(prior),div1.appendChild(div2),div1.appendChild(desc),div1.appendChild(date),taskBox.appendChild(completedInput),taskBox.appendChild(div1),taskBox.appendChild(deleteBtn),taskBox},showTask=function(e){document.querySelector("section").appendChild(renderTask(e))}},158:(e,t,o)=>{o.d(t,{Vk:()=>c,mB:()=>a});let c=0,a=[]},15:(e,t,o)=>{o.d(t,{Z:()=>c});class c{constructor(e){this.title=e,this.list=[]}add(e){this.list.push(e)}}},507:(e,t,o)=>{o.d(t,{Z:()=>c});class c{constructor(e,t,o,c,a=!1){this.title=e,this.desc=t,this.dueDate=o,this.priority=c,this.completed=a}set isCompleted(e){this.completed=e}}}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var o=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](o,o.exports,__webpack_require__),o.exports}__webpack_require__.d=(e,t)=>{for(var o in t)__webpack_require__.o(t,o)&&!__webpack_require__.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var __webpack_exports__={};(()=>{var e=__webpack_require__(15),t=__webpack_require__(158),o=__webpack_require__(290);let c=new e.Z("Inbox");t.mB.push(c),console.log(t.mB),(0,o.$X)(".addTask",".closeBtn",".taskForm"),(0,o.ZJ)(),(0,o.pR)(),(0,o.wZ)()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,