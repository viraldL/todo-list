(()=>{"use strict";var __webpack_modules__={290:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$X:()=>addTaskFormOpenClose,ZJ:()=>addProjectBtn,hH:()=>showProjects,pR:()=>addTaskBtn,wZ:()=>inboxController});var _project_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(15),_task_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(507),_localStorage_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(158);let current=0;const addTaskFormOpenClose=function(e,t,_){const o=document.querySelector(e),a=document.querySelector(t),r=document.querySelector(_);o.addEventListener("click",(()=>{r.classList.add("active")})),a.addEventListener("click",(()=>{r.classList.remove("active")}))},closeForm=function(){document.querySelector(".customProjForm").classList.remove("active"),document.querySelector(".projectName").value=""},openForm=function(){document.querySelector(".customProjForm").classList.add("active")},getNewData=function(){return document.querySelectorAll("[data-project]").length},getNewDataTask=function(){return document.querySelectorAll("[data-task]").length},addProject=function(e){const t=getNewData(),_=document.querySelector(".customProjList"),o=document.querySelector("#projForm"),a=document.createElement("div"),r=document.createElement("button"),c=document.createElement("p");a.classList.add("customProj"),a.setAttribute("data-project",`${t}`),c.textContent=e;const l=new _project_js__WEBPACK_IMPORTED_MODULE_0__.Z(e);_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB.push(l),(0,_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.t8)(_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB),r.setAttribute("data-btn",`${t}`),r.textContent="X",a.appendChild(c),a.appendChild(r),c.addEventListener("click",(()=>{changeProject(a.getAttribute("data-project"))})),r.addEventListener("click",(()=>{a.remove();let e=document.querySelectorAll("[data-project]");_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB.splice(a.getAttribute("data-project"),1),(0,_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.q_)(a.getAttribute("data-project"));for(let t=0;t<e.length;t++)e[t].setAttribute("data-project",t)})),_.insertBefore(a,o)},showProjects=function(){const e=document.querySelector(".customProjList"),t=document.querySelector("#projForm");let _=JSON.parse(localStorage.getItem("projects"));if(_.length>1)for(let o=1;o<_.length;o++){const a=document.createElement("div"),r=document.createElement("button"),c=document.createElement("p");let l=_[o].title;a.classList.add("customProj"),a.setAttribute("data-project",`${o}`),c.textContent=l,r.setAttribute("data-btn",`${o}`),r.textContent="X",a.appendChild(c),a.appendChild(r),c.addEventListener("click",(()=>{changeProject(a.getAttribute("data-project"))})),r.addEventListener("click",(()=>{a.remove();let e=document.querySelectorAll("[data-project]");_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB.splice(a.getAttribute("data-project"),1),(0,_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.q_)(a.getAttribute("data-project"));for(let t=0;t<e.length;t++)e[t].setAttribute("data-project",t)})),e.insertBefore(a,t)}},addProjectBtn=function(){const e=document.querySelector(".customProjBtn"),t=document.querySelector("button.close"),_=document.querySelector("button.add");e.addEventListener("click",(()=>{openForm()})),t.addEventListener("click",(()=>{closeForm()})),_.addEventListener("click",(e=>{e.preventDefault();let t=document.querySelector(".projectName");addProject(t.value),closeForm()}))},addTask=function(){let e=_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB[current],t=document.querySelector("#taskTitle").value,_=document.querySelector("#taskDesc").value,o=document.querySelector("#taskDate").value,a=document.querySelector("#taskPrior").value;""===o&&(o="No date");const r=new _task_js__WEBPACK_IMPORTED_MODULE_2__.Z(t,_,o,a),c=document.querySelector(".taskForm");e.list.push(r),c.classList.remove("active"),(0,_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.t8)(_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB),_="",o="",a="",showTask(r)},inboxController=function(){if(document.querySelector("#inbox").addEventListener("click",(()=>{changeProject(0)})),!localStorage.getItem("projects")){let e=new _project_js__WEBPACK_IMPORTED_MODULE_0__.Z("Inbox");_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB.push(e),(0,_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.t8)(_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB)}0!==_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB[0].list.length&&_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB[0].list.forEach((e=>{showTask(e)}))},addTaskBtn=function(){document.querySelector("#addTask").addEventListener("click",(()=>{addTask(),document.querySelector("#taskTitle").value="",document.querySelector("#taskDesc").value="",document.querySelector("#taskDate").value="",document.querySelector("#taskPrior").value="0"}))},changeProject=function(e){const t=document.querySelector("#projectName"),_=_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB[e].title;document.querySelector("section").innerHTML="",_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB[e].list.forEach((e=>{showTask(e)})),t.textContent=_,console.log(_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB),current=e},renderTask=function(task){let index=getNewDataTask();const taskBox=document.createElement("div");taskBox.classList.add("task"),taskBox.setAttribute("data-task",`${index}`);const completedInput=document.createElement("input");completedInput.setAttribute("type","checkbox"),completedInput.checked=task.completed,completedInput.addEventListener("change",(()=>{task.completed=!task.completed,console.log(task),(0,_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.t8)(_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB)}));const div1=document.createElement("div"),div2=document.createElement("div");div2.classList.add("titlenpri");const title=document.createElement("span");title.classList.add("title"),title.textContent=task.title;const prior=document.createElement("span");prior.classList.add("prior");const starImg0=document.createElement("img"),starImg1=document.createElement("img"),starImg2=document.createElement("img");starImg0.setAttribute("alt",""),starImg1.setAttribute("alt",""),starImg2.setAttribute("alt",""),starImg0.src="images/star-fill.svg",starImg1.src="images/star-fill.svg",starImg2.src="images/star-fill.svg";let i=0;do{eval(`prior.appendChild(starImg${i});`),i++}while(task.priority>=i);const desc=document.createElement("span");desc.classList.add("desc"),desc.textContent=task.desc;const date=document.createElement("span");date.classList.add("dueDate"),date.textContent=task.dueDate;const deleteBtn=document.createElement("button");return deleteBtn.textContent="Delete",deleteBtn.addEventListener("click",(()=>{taskBox.remove();const e=document.querySelectorAll("[data-task]");_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB[current].list.splice(taskBox.getAttribute("data-task"),1);for(let t=0;t<e.length;t++)e[t].setAttribute("data-task",t);console.log(_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB),(0,_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.t8)(_localStorage_js__WEBPACK_IMPORTED_MODULE_1__.mB)})),div2.appendChild(title),div2.appendChild(prior),div1.appendChild(div2),div1.appendChild(desc),div1.appendChild(date),taskBox.appendChild(completedInput),taskBox.appendChild(div1),taskBox.appendChild(deleteBtn),taskBox},showTask=function(e){document.querySelector("section").appendChild(renderTask(e))}},158:(e,t,_)=>{_.d(t,{hA:()=>l,mB:()=>a,q_:()=>c,t8:()=>r});var o=_(15);let a=[];function r(e){e.length>=0&&localStorage.setItem("projects",JSON.stringify(e))}function c(e){let t=JSON.parse(localStorage.getItem("projects"));t.splice(e,1),a=t,r(a)}function l(){let e=JSON.parse(localStorage.getItem("projects"));if(null!==e&&e.length>0)for(let t=0;t<=e.length-1;t++){let _=e[t].title,r=e[t].list,c=new o.Z(_);r.length>0&&r.forEach((e=>{c.add(e)})),a.push(c)}}},15:(e,t,_)=>{_.d(t,{Z:()=>o});class o{constructor(e){this.title=e,this.list=[]}add(e){this.list.push(e)}}},507:(e,t,_)=>{_.d(t,{Z:()=>o});class o{constructor(e,t,_,o,a=!1){this.title=e,this.desc=t,this.dueDate=_,this.priority=o,this.completed=a}set isCompleted(e){this.completed=e}}}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var _=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](_,_.exports,__webpack_require__),_.exports}__webpack_require__.d=(e,t)=>{for(var _ in t)__webpack_require__.o(t,_)&&!__webpack_require__.o(e,_)&&Object.defineProperty(e,_,{enumerable:!0,get:t[_]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var __webpack_exports__={},_localStorage_js__WEBPACK_IMPORTED_MODULE_0__,_displayController_js__WEBPACK_IMPORTED_MODULE_1__;_localStorage_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(158),_displayController_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(290),console.log(_localStorage_js__WEBPACK_IMPORTED_MODULE_0__.mB),(0,_displayController_js__WEBPACK_IMPORTED_MODULE_1__.$X)(".addTask",".closeBtn",".taskForm"),(0,_displayController_js__WEBPACK_IMPORTED_MODULE_1__.ZJ)(),(0,_displayController_js__WEBPACK_IMPORTED_MODULE_1__.pR)(),(0,_localStorage_js__WEBPACK_IMPORTED_MODULE_0__.hA)(),(0,_displayController_js__WEBPACK_IMPORTED_MODULE_1__.wZ)(),localStorage.getItem("projects")&&(0,_displayController_js__WEBPACK_IMPORTED_MODULE_1__.hH)()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUFDaEIsQ0FFQS9DLElBQUlvRCxHQUNBb0MsS0FBS3pDLEtBQUtDLEtBQUtJLEVBQ25CLEUsaUNDUlcsTUFBTXFDLEVBQ2pCRixZQUFZN0UsRUFBT2lDLEVBQU0rQixFQUFTRCxFQUFVUixHQUFZLEdBQ3BEdUIsS0FBSzlFLE1BQVFBLEVBQ2I4RSxLQUFLN0MsS0FBT0EsRUFDWjZDLEtBQUtkLFFBQVVBLEVBQ2ZjLEtBQUtmLFNBQVdBLEVBQ2hCZSxLQUFLdkIsVUFBWUEsQ0FDckIsQ0FFSXlCLGdCQUFZQyxHQUNaSCxLQUFLdkIsVUFBWTBCLENBQ3JCLEUsR0NWQUMseUJBQTJCLENBQUMsRUFHaEMsU0FBU0Msb0JBQW9CQyxHQUU1QixJQUFJQyxFQUFlSCx5QkFBeUJFLEdBQzVDLFFBQXFCRSxJQUFqQkQsRUFDSCxPQUFPQSxFQUFhRSxRQUdyQixJQUFJQyxFQUFTTix5QkFBeUJFLEdBQVksQ0FHakRHLFFBQVMsQ0FBQyxHQU9YLE9BSEFFLG9CQUFvQkwsR0FBVUksRUFBUUEsRUFBT0QsUUFBU0oscUJBRy9DSyxFQUFPRCxPQUNmLENDckJBSixvQkFBb0JPLEVBQUksQ0FBQ0gsRUFBU0ksS0FDakMsSUFBSSxJQUFJQyxLQUFPRCxFQUNYUixvQkFBb0JVLEVBQUVGLEVBQVlDLEtBQVNULG9CQUFvQlUsRUFBRU4sRUFBU0ssSUFDNUVFLE9BQU9DLGVBQWVSLEVBQVNLLEVBQUssQ0FBRUksWUFBWSxFQUFNQyxJQUFLTixFQUFXQyxJQUUxRSxFQ05EVCxvQkFBb0JVLEVBQUksQ0FBQ0ssRUFBS0MsSUFBVUwsT0FBT00sVUFBVUMsZUFBZUMsS0FBS0osRUFBS0MsRywrUUMyQmxGbEQsUUFBUUMsSUFBSSxtREFJWix5REFBcUIsV0FBWSxZQUFhLGNBQzlDLDREQUNBLDREQUNBLHVEQUNBLDJEQUNHN0IsYUFBYUMsUUFBUSxjQUNwQiwwRCIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9kaXNwbGF5Q29udHJvbGxlci5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbG9jYWxTdG9yYWdlLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9wcm9qZWN0LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy90YXNrLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUHJvamVjdCBmcm9tIFwiLi9wcm9qZWN0LmpzXCI7XHJcbmltcG9ydCBUYXNrIGZyb20gXCIuL3Rhc2suanNcIjtcclxuaW1wb3J0IHsgcG9wdWxhdGVTdG9yYWdlLCByZXRyaXZlU3RvcmFnZSwgcHJvamVjdHNMaXN0LCBkZWxldGVQcm9qZWN0TFMsIHNob3dTdG9yYWdlIH0gZnJvbSBcIi4vbG9jYWxTdG9yYWdlLmpzXCI7XHJcblxyXG5sZXQgY3VycmVudCA9IDA7XHJcbmNvbnN0IGFkZFRhc2tGb3JtT3BlbkNsb3NlID0gZnVuY3Rpb24ob3BlbiwgY2xvc2UsIGZvcm0pIHtcclxuICAgIGNvbnN0IG9wZW5CdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG9wZW4pO1xyXG4gICAgY29uc3QgY2xvc2VCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNsb3NlKTtcclxuICAgIGNvbnN0IGZvcm1Cb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGZvcm0pO1xyXG5cclxuICAgIC8vb3BlbiBmb3JtIGZvciBhZGRpbmcgdGFza1xyXG4gICAgb3BlbkJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgIGZvcm1Cb3guY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcclxuICAgIH0pO1xyXG4gICAgLy9jbG9zZSBmb3JtIGZvciBhZGRpbmcgdGFza1xyXG4gICAgY2xvc2VCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICBmb3JtQm94LmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XHJcbiAgICB9KTtcclxuXHJcbn1cclxuXHJcbi8vY2xvc2UgcHJvamVjdCBhZGQgZm9ybVxyXG5jb25zdCBjbG9zZUZvcm0gPSBmdW5jdGlvbigpIHtcclxuICAgIGNvbnN0IGFkZEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmN1c3RvbVByb2pGb3JtXCIpO1xyXG4gICAgYWRkRm9ybS5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xyXG5cclxuICAgIGxldCBpbnB1dEZpZWxkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0TmFtZVwiKTtcclxuICAgIGlucHV0RmllbGQudmFsdWUgPSBcIlwiXHJcbn1cclxuXHJcbi8vb3BlbiBwcm9qZWN0IGFkZCBmb3JtXHJcbmNvbnN0IG9wZW5Gb3JtID0gZnVuY3Rpb24oKSB7XHJcbiAgICBjb25zdCBhZGRGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jdXN0b21Qcm9qRm9ybVwiKTtcclxuICAgIGFkZEZvcm0uY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcclxufVxyXG5cclxuLy9nZXQgbnVtYmVyIG9mIHByb2plY3RzXHJcbmNvbnN0IGdldE5ld0RhdGEgPSBmdW5jdGlvbigpIHtcclxuICAgIGNvbnN0IGFsbFByb2ogPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtcHJvamVjdF1cIik7IFxyXG4gICAgcmV0dXJuIGFsbFByb2oubGVuZ3RoO1xyXG59XHJcblxyXG5jb25zdCBnZXROZXdEYXRhVGFzayA9IGZ1bmN0aW9uKCkge1xyXG4gICAgY29uc3QgYWxsVGFza3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtdGFza11cIik7IFxyXG4gICAgcmV0dXJuIGFsbFRhc2tzLmxlbmd0aDtcclxufVxyXG5cclxuLy9hZGQgcHJvamVjdCB0byB0aGUgbGlzdFxyXG5jb25zdCBhZGRQcm9qZWN0ID0gZnVuY3Rpb24odGl0bGUpIHtcclxuICAgIGNvbnN0IGluZGV4ID0gZ2V0TmV3RGF0YSgpO1xyXG4gICAgY29uc3QgcHJvakxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmN1c3RvbVByb2pMaXN0XCIpO1xyXG4gICAgY29uc3QgYWRkRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvakZvcm1cIik7XHJcblxyXG4gICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIGNvbnN0IGRlbGV0ZUJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XHJcbiAgICBjb25zdCBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XHJcblxyXG4gICAgZGl2LmNsYXNzTGlzdC5hZGQoXCJjdXN0b21Qcm9qXCIpO1xyXG4gICAgZGl2LnNldEF0dHJpYnV0ZShcImRhdGEtcHJvamVjdFwiLCBgJHtpbmRleH1gKTtcclxuICAgIHAudGV4dENvbnRlbnQgPSB0aXRsZTtcclxuXHJcbiAgICBjb25zdCBuZXdQcm9qZWN0ID0gbmV3IFByb2plY3QodGl0bGUpO1xyXG4gICAgcHJvamVjdHNMaXN0LnB1c2gobmV3UHJvamVjdCk7XHJcbiAgICBwb3B1bGF0ZVN0b3JhZ2UocHJvamVjdHNMaXN0KTtcclxuICAgIC8vIGNvbnNvbGUubG9nKHByb2plY3RzTGlzdCk7XHJcbiAgICAvLyBwb3B1bGF0ZVN0b3JhZ2UocHJvamVjdHNMaXN0KTtcclxuICAgIC8vIGNvbnNvbGUubG9nKHByb2plY3RzTGlzdCk7XHJcbiAgICAvLyBzaG93U3RvcmFnZSgpO1xyXG5cclxuICAgIGRlbGV0ZUJ0bi5zZXRBdHRyaWJ1dGUoXCJkYXRhLWJ0blwiLCBgJHtpbmRleH1gKTtcclxuICAgIGRlbGV0ZUJ0bi50ZXh0Q29udGVudCA9IFwiWFwiO1xyXG5cclxuICAgIGRpdi5hcHBlbmRDaGlsZChwKTtcclxuICAgIGRpdi5hcHBlbmRDaGlsZChkZWxldGVCdG4pO1xyXG4gICAgcC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgIGNoYW5nZVByb2plY3QoZGl2LmdldEF0dHJpYnV0ZSgnZGF0YS1wcm9qZWN0JykpO1xyXG4gICAgfSlcclxuXHJcbiAgICBkZWxldGVCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICBkaXYucmVtb3ZlKCk7XHJcbiAgICAgICAgbGV0IGFsbERpdnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtcHJvamVjdF1cIik7XHJcbiAgICAgICAgcHJvamVjdHNMaXN0LnNwbGljZShkaXYuZ2V0QXR0cmlidXRlKCdkYXRhLXByb2plY3QnKSwgMSk7XHJcbiAgICAgICAgZGVsZXRlUHJvamVjdExTKGRpdi5nZXRBdHRyaWJ1dGUoJ2RhdGEtcHJvamVjdCcpKTtcclxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgYWxsRGl2cy5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgIGFsbERpdnNbaV0uc2V0QXR0cmlidXRlKCdkYXRhLXByb2plY3QnLCBpKTtcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG4gICAgcHJvakxpc3QuaW5zZXJ0QmVmb3JlKGRpdiwgYWRkRm9ybSk7XHJcbiAgICAvLyBjb25zb2xlLmxvZyhwcm9qZWN0c0xpc3QpO1xyXG59XHJcblxyXG5jb25zdCBzaG93UHJvamVjdHMgPSBmdW5jdGlvbigpIHtcclxuXHJcbiAgICBjb25zdCBwcm9qTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY3VzdG9tUHJvakxpc3RcIik7XHJcbiAgICBjb25zdCBhZGRGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9qRm9ybVwiKTtcclxuICAgIGxldCBwcm9qID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShgcHJvamVjdHNgKSk7XHJcbiAgICBcclxuICAgIGlmKHByb2oubGVuZ3RoID4gMSkge1xyXG4gICAgICAgIGZvcihsZXQgaSA9IDE7IGkgPCBwcm9qLmxlbmd0aDsgaSsrKSB7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgICAgICAgICBjb25zdCBkZWxldGVCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xyXG4gICAgICAgICAgICBjb25zdCBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XHJcblxyXG4gICAgICAgICAgICBsZXQgcHJvamVjdE5hbWUgPSBwcm9qW2ldLnRpdGxlO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgZGl2LmNsYXNzTGlzdC5hZGQoXCJjdXN0b21Qcm9qXCIpO1xyXG4gICAgICAgICAgICBkaXYuc2V0QXR0cmlidXRlKFwiZGF0YS1wcm9qZWN0XCIsIGAke2l9YCk7XHJcbiAgICAgICAgICAgIHAudGV4dENvbnRlbnQgPSBwcm9qZWN0TmFtZTtcclxuICAgICAgICBcclxuICAgICAgICAgICAgZGVsZXRlQnRuLnNldEF0dHJpYnV0ZShcImRhdGEtYnRuXCIsIGAke2l9YCk7XHJcbiAgICAgICAgICAgIGRlbGV0ZUJ0bi50ZXh0Q29udGVudCA9IFwiWFwiO1xyXG4gICAgICAgIFxyXG4gICAgICAgICAgICBkaXYuYXBwZW5kQ2hpbGQocCk7XHJcbiAgICAgICAgICAgIGRpdi5hcHBlbmRDaGlsZChkZWxldGVCdG4pO1xyXG5cclxuICAgICAgICAgICAgcC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgY2hhbmdlUHJvamVjdChkaXYuZ2V0QXR0cmlidXRlKCdkYXRhLXByb2plY3QnKSk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgIGRlbGV0ZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgZGl2LnJlbW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgbGV0IGFsbERpdnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtcHJvamVjdF1cIik7XHJcbiAgICAgICAgICAgICAgICBwcm9qZWN0c0xpc3Quc3BsaWNlKGRpdi5nZXRBdHRyaWJ1dGUoJ2RhdGEtcHJvamVjdCcpLCAxKTtcclxuICAgICAgICAgICAgICAgIGRlbGV0ZVByb2plY3RMUyhkaXYuZ2V0QXR0cmlidXRlKCdkYXRhLXByb2plY3QnKSk7XHJcbiAgICAgICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgYWxsRGl2cy5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgICAgICAgICAgYWxsRGl2c1tpXS5zZXRBdHRyaWJ1dGUoJ2RhdGEtcHJvamVjdCcsIGkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICBwcm9qTGlzdC5pbnNlcnRCZWZvcmUoZGl2LCBhZGRGb3JtKTtcclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcbi8vY29udHJvbCBhZGQgcHJvamVjdCBmcm9tIGJ1dHRvbnNcclxuY29uc3QgYWRkUHJvamVjdEJ0biA9IGZ1bmN0aW9uKCkge1xyXG4gICAgY29uc3QgYWRkQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jdXN0b21Qcm9qQnRuXCIpO1xyXG4gICAgY29uc3QgY2xvc2VGb3JtQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImJ1dHRvbi5jbG9zZVwiKVxyXG4gICAgY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImJ1dHRvbi5hZGRcIik7XHJcblxyXG4gICAgYWRkQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgb3BlbkZvcm0oKTtcclxuICAgIH0pXHJcblxyXG4gICAgY2xvc2VGb3JtQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgY2xvc2VGb3JtKCk7XHJcbiAgICB9KVxyXG4gICAgYWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAvLyBsZXQgaW5kZXggPSBnZXROZXdEYXRhKCk7XHJcbiAgICAgICAgbGV0IGlucHV0RmllbGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2plY3ROYW1lXCIpO1xyXG4gICAgICAgIGFkZFByb2plY3QoaW5wdXRGaWVsZC52YWx1ZSk7XHJcbiAgICAgICAgY2xvc2VGb3JtKCk7XHJcbiAgICB9KVxyXG5cclxufVxyXG5cclxuXHJcbmNvbnN0IGFkZFRhc2sgPSBmdW5jdGlvbigpIHtcclxuICAgIGxldCBjdXJyZW50UHJvaiA9IHByb2plY3RzTGlzdFtjdXJyZW50XTtcclxuICAgIGxldCB0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdGFza1RpdGxlXCIpLnZhbHVlO1xyXG4gICAgbGV0IGRlc2MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Rhc2tEZXNjXCIpLnZhbHVlO1xyXG4gICAgbGV0IGRhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Rhc2tEYXRlXCIpLnZhbHVlO1xyXG4gICAgbGV0IHByaW9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN0YXNrUHJpb3JcIikudmFsdWU7XHJcbiAgICBpZihkYXRlID09PSBcIlwiKXtcclxuICAgICAgICBkYXRlID0gXCJObyBkYXRlXCJcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBuZXdUYXNrID0gbmV3IFRhc2sodGl0bGUsIGRlc2MsIGRhdGUsIHByaW9yKTtcclxuICAgIGNvbnN0IGZvcm1Cb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnRhc2tGb3JtXCIpO1xyXG4gICAgY3VycmVudFByb2oubGlzdC5wdXNoKG5ld1Rhc2spO1xyXG4gICAgZm9ybUJveC5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xyXG4gICAgcG9wdWxhdGVTdG9yYWdlKHByb2plY3RzTGlzdCk7XHJcbiAgICBkZXNjID0gXCJcIjtcclxuICAgIGRhdGUgPSBcIlwiO1xyXG4gICAgcHJpb3IgPSBcIlwiO1xyXG4gICAgc2hvd1Rhc2sobmV3VGFzaylcclxufVxyXG5cclxuY29uc3QgaW5ib3hDb250cm9sbGVyID0gZnVuY3Rpb24oKSB7XHJcbiAgICBjb25zdCBpbmJveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjaW5ib3hcIik7XHJcbiAgICBpbmJveC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgIGNoYW5nZVByb2plY3QoMCk7XHJcbiAgICB9KVxyXG4gICAgaWYoIWxvY2FsU3RvcmFnZS5nZXRJdGVtKGBwcm9qZWN0c2ApKSB7XHJcbiAgICAgICAgbGV0IEluYm94ID0gbmV3IFByb2plY3QoXCJJbmJveFwiKTtcclxuICAgICAgICBwcm9qZWN0c0xpc3QucHVzaChJbmJveCk7XHJcbiAgICAgICAgcG9wdWxhdGVTdG9yYWdlKHByb2plY3RzTGlzdCk7XHJcbiAgICB9XHJcbiAgICBpZihwcm9qZWN0c0xpc3RbMF0ubGlzdC5sZW5ndGggIT09IDApe1xyXG4gICAgICAgIHByb2plY3RzTGlzdFswXS5saXN0LmZvckVhY2godGFzayA9PiB7XHJcbiAgICAgICAgICAgIHNob3dUYXNrKHRhc2spXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxufVxyXG5cclxuY29uc3QgYWRkVGFza0J0biA9IGZ1bmN0aW9uKCkge1xyXG4gICAgY29uc3QgYWRkQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGRUYXNrXCIpO1xyXG4gICAgYWRkQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgYWRkVGFzaygpO1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdGFza1RpdGxlXCIpLnZhbHVlID0gXCJcIjtcclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Rhc2tEZXNjXCIpLnZhbHVlID0gXCJcIjtcclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Rhc2tEYXRlXCIpLnZhbHVlID0gXCJcIjtcclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Rhc2tQcmlvclwiKS52YWx1ZSA9IFwiMFwiO1xyXG4gICAgfSlcclxufVxyXG5cclxuY29uc3QgY2hhbmdlUHJvamVjdCA9IGZ1bmN0aW9uKGlkKSB7XHJcbiAgICBjb25zdCBwcm9qRGlzcGxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvamVjdE5hbWVcIik7XHJcbiAgICBjb25zdCBwcm9qTmFtZSA9IHByb2plY3RzTGlzdFtpZF0udGl0bGU7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwic2VjdGlvblwiKS5pbm5lckhUTUwgPSBcIlwiO1xyXG4gICAgcHJvamVjdHNMaXN0W2lkXS5saXN0LmZvckVhY2godGFzayA9PiB7XHJcbiAgICAgICAgc2hvd1Rhc2sodGFzaylcclxuICAgIH0pXHJcbiAgICBwcm9qRGlzcGxheS50ZXh0Q29udGVudCA9IHByb2pOYW1lO1xyXG4gICAgY29uc29sZS5sb2cocHJvamVjdHNMaXN0KTtcclxuICAgIGN1cnJlbnQgPSBpZDtcclxufVxyXG5cclxuY29uc3QgcmVuZGVyVGFzayA9IGZ1bmN0aW9uKHRhc2spIHtcclxuICAgIGxldCBpbmRleCA9IGdldE5ld0RhdGFUYXNrKCk7XHJcbiAgICBjb25zdCB0YXNrQm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIHRhc2tCb3guY2xhc3NMaXN0LmFkZChcInRhc2tcIik7XHJcbiAgICB0YXNrQm94LnNldEF0dHJpYnV0ZShcImRhdGEtdGFza1wiLCBgJHtpbmRleH1gKTtcclxuXHJcbiAgICBjb25zdCBjb21wbGV0ZWRJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuICAgIGNvbXBsZXRlZElucHV0LnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJjaGVja2JveFwiKTtcclxuICAgIGNvbXBsZXRlZElucHV0LmNoZWNrZWQgPSB0YXNrLmNvbXBsZXRlZDtcclxuICAgIGNvbXBsZXRlZElucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRhc2suY29tcGxldGVkID0gIXRhc2suY29tcGxldGVkO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHRhc2spO1xyXG4gICAgICAgIHBvcHVsYXRlU3RvcmFnZShwcm9qZWN0c0xpc3QpO1xyXG4gICAgfSlcclxuXHJcbiAgICBjb25zdCBkaXYxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIGNvbnN0IGRpdjIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgZGl2Mi5jbGFzc0xpc3QuYWRkKFwidGl0bGVucHJpXCIpO1xyXG5cclxuICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XHJcbiAgICB0aXRsZS5jbGFzc0xpc3QuYWRkKFwidGl0bGVcIik7XHJcbiAgICB0aXRsZS50ZXh0Q29udGVudCA9IHRhc2sudGl0bGU7XHJcblxyXG4gICAgY29uc3QgcHJpb3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICAgIHByaW9yLmNsYXNzTGlzdC5hZGQoXCJwcmlvclwiKTtcclxuICAgIGNvbnN0IHN0YXJJbWcwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcclxuICAgIGNvbnN0IHN0YXJJbWcxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcclxuICAgIGNvbnN0IHN0YXJJbWcyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcclxuICAgIHN0YXJJbWcwLnNldEF0dHJpYnV0ZShcImFsdFwiLCBcIlwiKTtcclxuICAgIHN0YXJJbWcxLnNldEF0dHJpYnV0ZShcImFsdFwiLCBcIlwiKTtcclxuICAgIHN0YXJJbWcyLnNldEF0dHJpYnV0ZShcImFsdFwiLCBcIlwiKTtcclxuICAgIHN0YXJJbWcwLnNyYyA9IFwiaW1hZ2VzL3N0YXItZmlsbC5zdmdcIjtcclxuICAgIHN0YXJJbWcxLnNyYyA9IFwiaW1hZ2VzL3N0YXItZmlsbC5zdmdcIjtcclxuICAgIHN0YXJJbWcyLnNyYyA9IFwiaW1hZ2VzL3N0YXItZmlsbC5zdmdcIjtcclxuXHJcbiAgICBsZXQgaSA9IDA7XHJcbiAgICBkbyB7XHJcbiAgICAgICAgZXZhbChgcHJpb3IuYXBwZW5kQ2hpbGQoc3RhckltZyR7aX0pO2ApO1xyXG4gICAgICAgIGkrK1xyXG4gICAgfSB3aGlsZSh0YXNrLnByaW9yaXR5ID49IGkpO1xyXG5cclxuICAgIGNvbnN0IGRlc2MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICAgIGRlc2MuY2xhc3NMaXN0LmFkZChcImRlc2NcIik7XHJcbiAgICBkZXNjLnRleHRDb250ZW50ID0gdGFzay5kZXNjO1xyXG5cclxuICAgIGNvbnN0IGRhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICAgIGRhdGUuY2xhc3NMaXN0LmFkZChcImR1ZURhdGVcIik7XHJcbiAgICBkYXRlLnRleHRDb250ZW50ID0gdGFzay5kdWVEYXRlO1xyXG5cclxuICAgIGNvbnN0IGRlbGV0ZUJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XHJcbiAgICBkZWxldGVCdG4udGV4dENvbnRlbnQgPSBcIkRlbGV0ZVwiO1xyXG5cclxuICAgIGRlbGV0ZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRhc2tCb3gucmVtb3ZlKCk7XHJcbiAgICAgICAgY29uc3QgYWxsVGFza3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtdGFza11cIik7XHJcbiAgICAgICAgcHJvamVjdHNMaXN0W2N1cnJlbnRdLmxpc3Quc3BsaWNlKHRhc2tCb3guZ2V0QXR0cmlidXRlKFwiZGF0YS10YXNrXCIpLCAxKTtcclxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgYWxsVGFza3MubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICBhbGxUYXNrc1tpXS5zZXRBdHRyaWJ1dGUoJ2RhdGEtdGFzaycsIGkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zb2xlLmxvZyhwcm9qZWN0c0xpc3QpO1xyXG4gICAgICAgIHBvcHVsYXRlU3RvcmFnZShwcm9qZWN0c0xpc3QpO1xyXG4gICAgfSlcclxuXHJcbiAgICBkaXYyLmFwcGVuZENoaWxkKHRpdGxlKTtcclxuICAgIGRpdjIuYXBwZW5kQ2hpbGQocHJpb3IpO1xyXG5cclxuICAgIGRpdjEuYXBwZW5kQ2hpbGQoZGl2Mik7XHJcbiAgICBkaXYxLmFwcGVuZENoaWxkKGRlc2MpO1xyXG4gICAgZGl2MS5hcHBlbmRDaGlsZChkYXRlKTtcclxuICAgIHRhc2tCb3guYXBwZW5kQ2hpbGQoY29tcGxldGVkSW5wdXQpO1xyXG4gICAgdGFza0JveC5hcHBlbmRDaGlsZChkaXYxKTtcclxuICAgIHRhc2tCb3guYXBwZW5kQ2hpbGQoZGVsZXRlQnRuKTtcclxuICAgIFxyXG4gICAgcmV0dXJuIHRhc2tCb3g7XHJcbn1cclxuXHJcbmNvbnN0IHNob3dUYXNrID0gZnVuY3Rpb24odGFzayl7XHJcbiAgICBjb25zdCBzZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcInNlY3Rpb25cIik7XHJcbiAgICBzZWN0aW9uLmFwcGVuZENoaWxkKHJlbmRlclRhc2sodGFzaykpO1xyXG59XHJcblxyXG5cclxuLy9ET0RBSiBSRVRSSVZFUFJPSkVDVFNcclxuXHJcblxyXG5cclxuZXhwb3J0IHsgYWRkVGFza0Zvcm1PcGVuQ2xvc2UsIGFkZFByb2plY3RCdG4sIGFkZFRhc2tCdG4sIGluYm94Q29udHJvbGxlciwgc2hvd1Byb2plY3RzIH07IiwiaW1wb3J0IFByb2plY3QgZnJvbSBcIi4vcHJvamVjdC5qc1wiO1xyXG5cclxubGV0IHByb2plY3RzTGlzdD0gW107XHJcbmZ1bmN0aW9uIHBvcHVsYXRlU3RvcmFnZShwcm9qZWN0cykge1xyXG4gICAgaWYocHJvamVjdHMubGVuZ3RoID49IDApIHtcclxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oYHByb2plY3RzYCwgSlNPTi5zdHJpbmdpZnkocHJvamVjdHMpKTtcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gZGVsZXRlUHJvamVjdExTKGluZGV4KSB7XHJcbiAgICBsZXQgcHJvaiA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oYHByb2plY3RzYCkpO1xyXG4gICAgcHJvai5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgcHJvamVjdHNMaXN0ID0gcHJvajtcclxuICAgIC8vIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGBwcm9qZWN0c2AsIEpTT04uc3RyaW5naWZ5KHByb2opKTtcclxuICAgIHBvcHVsYXRlU3RvcmFnZShwcm9qZWN0c0xpc3QpO1xyXG59XHJcblxyXG5mdW5jdGlvbiByZXRyaXZlU3RvcmFnZSgpIHtcclxuICAgIGxldCBwcm9qID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShgcHJvamVjdHNgKSk7XHJcbiAgICBpZihwcm9qICE9PSBudWxsKSB7XHJcbiAgICAgICAgaWYocHJvai5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPD0gcHJvai5sZW5ndGggLSAxOyAgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHByb2plY3ROYW1lID0gcHJvaltpXS50aXRsZTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgdGFza3MgPSBwcm9qW2ldLmxpc3Q7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHByb2plY3QgPSBuZXcgUHJvamVjdChwcm9qZWN0TmFtZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYodGFza3MubGVuZ3RoID4gMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhc2tzLmZvckVhY2godGFzayA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9qZWN0LmFkZCh0YXNrKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHByb2plY3RzTGlzdC5wdXNoKHByb2plY3QpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBzaG93U3RvcmFnZSgpIHtcclxuICAgIC8vIHJldHJpdmVTdG9yYWdlKClcclxuXHJcbiAgICBjb25zdCBwcm9qTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY3VzdG9tUHJvakxpc3RcIik7XHJcbiAgICBjb25zdCBhZGRGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9qRm9ybVwiKTtcclxuICAgIGxldCBwcm9qID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShgcHJvamVjdHNgKSk7XHJcblxyXG4gICAgaWYocHJvai5sZW5ndGggPiAxKSB7XHJcbiAgICAgICAgZm9yKGxldCBpID0gMTsgaSA8IHByb2oubGVuZ3RoOyBpKyspIHsgICAgXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGRlbGV0ZUJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XHJcblxyXG4gICAgICAgICAgICAgICAgbGV0IHByb2plY3ROYW1lID0gcHJvaltpXS50aXRsZTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgZGl2LmNsYXNzTGlzdC5hZGQoXCJjdXN0b21Qcm9qXCIpO1xyXG4gICAgICAgICAgICAgICAgZGl2LnNldEF0dHJpYnV0ZShcImRhdGEtcHJvamVjdFwiLCBgJHtpfWApO1xyXG4gICAgICAgICAgICAgICAgZGl2LnRleHRDb250ZW50ID0gcHJvamVjdE5hbWU7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgZGVsZXRlQnRuLnNldEF0dHJpYnV0ZShcImRhdGEtYnRuXCIsIGAke2l9YCk7XHJcbiAgICAgICAgICAgICAgICBkZWxldGVCdG4udGV4dENvbnRlbnQgPSBcIlhcIjtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBkaXYuYXBwZW5kQ2hpbGQoZGVsZXRlQnRuKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBkZWxldGVCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBkaXYucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlUHJvamVjdExTKGkpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIHByb2pMaXN0Lmluc2VydEJlZm9yZShkaXYsIGFkZEZvcm0pO1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5leHBvcnQgeyBwb3B1bGF0ZVN0b3JhZ2UsIHJldHJpdmVTdG9yYWdlLCBwcm9qZWN0c0xpc3QsIHNob3dTdG9yYWdlLCBkZWxldGVQcm9qZWN0TFMgfTsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQcm9qZWN0IHtcclxuICAgIGNvbnN0cnVjdG9yKHRpdGxlKSB7XHJcbiAgICAgICAgdGhpcy50aXRsZSA9IHRpdGxlO1xyXG4gICAgICAgIHRoaXMubGlzdCA9IFtdO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZCh0YXNrKSB7XHJcbiAgICAgICAgdGhpcy5saXN0LnB1c2godGFzayk7XHJcbiAgICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGFzayB7XHJcbiAgICBjb25zdHJ1Y3Rvcih0aXRsZSwgZGVzYywgZHVlRGF0ZSwgcHJpb3JpdHksIGNvbXBsZXRlZCA9IGZhbHNlKSB7XHJcbiAgICAgICAgdGhpcy50aXRsZSA9IHRpdGxlO1xyXG4gICAgICAgIHRoaXMuZGVzYyA9IGRlc2M7XHJcbiAgICAgICAgdGhpcy5kdWVEYXRlID0gZHVlRGF0ZTtcclxuICAgICAgICB0aGlzLnByaW9yaXR5ID0gcHJpb3JpdHk7XHJcbiAgICAgICAgdGhpcy5jb21wbGV0ZWQgPSBjb21wbGV0ZWQ7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IGlzQ29tcGxldGVkKGJvb2wpIHtcclxuICAgICAgICB0aGlzLmNvbXBsZXRlZCA9IGJvb2w7XHJcbiAgICB9XHJcbn0iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsImltcG9ydCBUYXNrIGZyb20gXCIuL3Rhc2suanNcIjtcclxuaW1wb3J0IFByb2plY3QgZnJvbSBcIi4vcHJvamVjdC5qc1wiO1xyXG5pbXBvcnQgeyBwb3B1bGF0ZVN0b3JhZ2UsIHJldHJpdmVTdG9yYWdlLCBwcm9qZWN0c0xpc3QgfSBmcm9tIFwiLi9sb2NhbFN0b3JhZ2UuanNcIjtcclxuaW1wb3J0IHsgYWRkVGFza0Zvcm1PcGVuQ2xvc2UsIGFkZFByb2plY3RCdG4sIGFkZFRhc2tCdG4sIGluYm94Q29udHJvbGxlciwgc2hvd1Byb2plY3RzIH0gZnJvbSBcIi4vZGlzcGxheUNvbnRyb2xsZXIuanNcIjtcclxuXHJcbi8vIHNob3dTdG9yYWdlKCk7XHJcbi8vIGxvY2FsU3RvcmFnZS5jbGVhcigpO1xyXG4vLyBwcm9qZWN0c0xpc3QgPSBbXTtcclxuXHJcbi8vIGxldCB0YXNrMSA9IG5ldyBUYXNrKFwiWmplc2NcIiwgXCJtdXN6ZSB6amVzYyBqdXRybyByYW5vXCIsIFwiMjAyMi0xMC0xM1wiLCAzKTtcclxuLy8gbGV0IHRhc2syID0gbmV3IFRhc2soXCJaamVzY1wiLCBcIm11c3plIHpqZXNjIGp1dHJvIHJhbm9cIiwgXCIyMDIyLTEwLTEzXCIsIDMpO1xyXG4vLyBsZXQgdGFzazMgPSBuZXcgVGFzayhcIlpqZXNjXCIsIFwibXVzemUgemplc2MganV0cm8gcmFub1wiLCBcIjIwMjItMTAtMTNcIiwgMyk7XHJcbi8vIGxldCB0YXNrNCA9IG5ldyBUYXNrKFwiWmplc2NcIiwgXCJtdXN6ZSB6amVzYyBqdXRybyByYW5vXCIsIFwiMjAyMi0xMC0xM1wiLCAzKTtcclxuLy8gbGV0IHRhc2s1ID0gbmV3IFRhc2soXCJaamVzY1wiLCBcIm11c3plIHpqZXNjIGp1dHJvIHJhbm9cIiwgXCIyMDIyLTEwLTEzXCIsIDMpO1xyXG4vLyBpZighbG9jYWxTdG9yYWdlLmdldEl0ZW0oYHByb2plY3RzYCkpIHtcclxuLy8gICAgIGxldCBJbmJveCA9IG5ldyBQcm9qZWN0KFwiSW5ib3hcIik7XHJcbi8vICAgICBwcm9qZWN0c0xpc3QucHVzaChJbmJveCk7XHJcbi8vICAgICBwb3B1bGF0ZVN0b3JhZ2UocHJvamVjdHNMaXN0KTtcclxuLy8gfVxyXG4vLyBsZXQgRm9jdXMgPSBuZXcgUHJvamVjdChcImZvY3VzXCIpO1xyXG4vLyBJbmJveC5hZGQodGFzazEpO1xyXG4vLyBJbmJveC5hZGQodGFzazIpO1xyXG4vLyBJbmJveC5hZGQodGFzazMpO1xyXG4vLyBGb2N1cy5hZGQodGFzazQpO1xyXG4vLyBGb2N1cy5hZGQodGFzazUpO1xyXG4vLyAvLyBsZXQgRW1wdHkgPSBuZXcgUHJvamVjdChcImVtcHR5XCIpO1xyXG4vLyBwcm9qZWN0c0xpc3QucHVzaChGb2N1cyk7XHJcbmNvbnNvbGUubG9nKHByb2plY3RzTGlzdCk7XHJcbi8vIHBvcHVsYXRlU3RvcmFnZShwcm9qZWN0c0xpc3QpO1xyXG4vLyBjb25zb2xlLmxvZyhJbmJveCk7XHJcbi8vIGNvbnNvbGUubG9nKHByb2plY3RzTGlzdCk7XHJcbmFkZFRhc2tGb3JtT3BlbkNsb3NlKFwiLmFkZFRhc2tcIiwgXCIuY2xvc2VCdG5cIiwgXCIudGFza0Zvcm1cIik7XHJcbmFkZFByb2plY3RCdG4oKTtcclxuYWRkVGFza0J0bigpO1xyXG5yZXRyaXZlU3RvcmFnZSgpO1xyXG5pbmJveENvbnRyb2xsZXIoKTtcclxuaWYobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJwcm9qZWN0c1wiKSl7XHJcbiAgICBzaG93UHJvamVjdHMoKTtcclxufVxyXG4vLyBwb3B1bGF0ZVN0b3JhZ2UocHJvamVjdHNMaXN0KTtcclxuLy8gcmV0cml2ZVN0b3JhZ2UoKTsiXSwibmFtZXMiOlsiY3VycmVudCIsImFkZFRhc2tGb3JtT3BlbkNsb3NlIiwib3BlbiIsImNsb3NlIiwiZm9ybSIsIm9wZW5CdG4iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjbG9zZUJ0biIsImZvcm1Cb3giLCJhZGRFdmVudExpc3RlbmVyIiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIiwiY2xvc2VGb3JtIiwidmFsdWUiLCJvcGVuRm9ybSIsImdldE5ld0RhdGEiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwiZ2V0TmV3RGF0YVRhc2siLCJhZGRQcm9qZWN0IiwidGl0bGUiLCJpbmRleCIsInByb2pMaXN0IiwiYWRkRm9ybSIsImRpdiIsImNyZWF0ZUVsZW1lbnQiLCJkZWxldGVCdG4iLCJwIiwic2V0QXR0cmlidXRlIiwidGV4dENvbnRlbnQiLCJuZXdQcm9qZWN0IiwiYXBwZW5kQ2hpbGQiLCJjaGFuZ2VQcm9qZWN0IiwiZ2V0QXR0cmlidXRlIiwiYWxsRGl2cyIsImkiLCJpbnNlcnRCZWZvcmUiLCJzaG93UHJvamVjdHMiLCJwcm9qIiwiSlNPTiIsInBhcnNlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInByb2plY3ROYW1lIiwiYWRkUHJvamVjdEJ0biIsImFkZEJ0biIsImNsb3NlRm9ybUJ0biIsImFkZEJ1dHRvbiIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImlucHV0RmllbGQiLCJhZGRUYXNrIiwiY3VycmVudFByb2oiLCJkZXNjIiwiZGF0ZSIsInByaW9yIiwibmV3VGFzayIsImxpc3QiLCJwdXNoIiwic2hvd1Rhc2siLCJpbmJveENvbnRyb2xsZXIiLCJJbmJveCIsInRhc2siLCJhZGRUYXNrQnRuIiwiaWQiLCJwcm9qRGlzcGxheSIsInByb2pOYW1lIiwiaW5uZXJIVE1MIiwiZm9yRWFjaCIsImNvbnNvbGUiLCJsb2ciLCJyZW5kZXJUYXNrIiwidGFza0JveCIsImNvbXBsZXRlZElucHV0IiwiY2hlY2tlZCIsImNvbXBsZXRlZCIsImRpdjEiLCJkaXYyIiwic3RhckltZzAiLCJzdGFySW1nMSIsInN0YXJJbWcyIiwic3JjIiwiZXZhbCIsInByaW9yaXR5IiwiZHVlRGF0ZSIsImFsbFRhc2tzIiwic3BsaWNlIiwicHJvamVjdHNMaXN0IiwicG9wdWxhdGVTdG9yYWdlIiwicHJvamVjdHMiLCJzZXRJdGVtIiwic3RyaW5naWZ5IiwiZGVsZXRlUHJvamVjdExTIiwicmV0cml2ZVN0b3JhZ2UiLCJ0YXNrcyIsInByb2plY3QiLCJQcm9qZWN0IiwiY29uc3RydWN0b3IiLCJ0aGlzIiwiVGFzayIsImlzQ29tcGxldGVkIiwiYm9vbCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZCIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCJdLCJzb3VyY2VSb290IjoiIn0=